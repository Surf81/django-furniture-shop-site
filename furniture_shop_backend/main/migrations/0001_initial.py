# Generated by Django 4.2 on 2023-05-06 16:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import main.models
import main.utilities


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        db_index=True,
                        max_length=150,
                        unique=True,
                        verbose_name="категория",
                    ),
                ),
                (
                    "order",
                    models.SmallIntegerField(
                        db_index=True, default=0, verbose_name="порядок"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Characteristic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        db_index=True, max_length=100, verbose_name="характеристика"
                    ),
                ),
                (
                    "order",
                    models.SmallIntegerField(
                        db_index=True, default=0, verbose_name="порядок"
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        choices=[(1, "Элемент списка"), (2, "Измерение")],
                        null=True,
                        validators=[main.models.is_nul_validator],
                        verbose_name="тип",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150, verbose_name="модель")),
                ("description", models.TextField(verbose_name="описание")),
                ("count", models.PositiveIntegerField(verbose_name="количество")),
                ("price", models.PositiveIntegerField(verbose_name="цена")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        upload_to=main.utilities.get_timestamp_path,
                        verbose_name="основное изображение",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="модель доступна?"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="опубликовано"
                    ),
                ),
                (
                    "changed_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="опубликовано"
                    ),
                ),
            ],
            options={
                "verbose_name": "товар",
                "verbose_name_plural": "товары",
            },
        ),
        migrations.CreateModel(
            name="UserProductRelated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "count_on_cart",
                    models.PositiveIntegerField(default=0, verbose_name="в корзине"),
                ),
                (
                    "is_favorit",
                    models.BooleanField(default=False, verbose_name="избранное"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main.product"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "пользователь - товар",
                "verbose_name_plural": "действия пользователей с товарами",
            },
        ),
        migrations.AddField(
            model_name="product",
            name="buyers",
            field=models.ManyToManyField(
                through="main.UserProductRelated", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("author", models.CharField(max_length=150, verbose_name="автор")),
                (
                    "is_anonimous",
                    models.BooleanField(
                        default=False, verbose_name="оставаться анонимным?"
                    ),
                ),
                ("content", models.TextField(verbose_name="содержание")),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="выводить на экран?"
                    ),
                ),
                (
                    "is_claim",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="жалоба"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="опубликован"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.product",
                        verbose_name="товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "комментарий",
                "verbose_name_plural": "комментарии",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="CharacteristicProductRelated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.IntegerField(blank=True, null=True, verbose_name="значение"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main.product"
                    ),
                ),
            ],
            options={
                "verbose_name": "характеристика модели",
                "verbose_name_plural": "характеристики модели",
            },
        ),
        migrations.CreateModel(
            name="AdditionalImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to=main.utilities.get_timestamp_path,
                        verbose_name="дополнительное изображение",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.product",
                        verbose_name="модель",
                    ),
                ),
            ],
            options={
                "verbose_name": "дополнительное изображение",
                "verbose_name_plural": "дополнительные изображения",
            },
        ),
        migrations.CreateModel(
            name="CharacteristicGroup",
            fields=[],
            options={
                "verbose_name": "группа характеристик",
                "verbose_name_plural": "группы характеристик",
                "ordering": ("order", "title"),
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("main.characteristic",),
        ),
        migrations.CreateModel(
            name="CharacteristicItem",
            fields=[],
            options={
                "verbose_name": "характеристика",
                "verbose_name_plural": "характеристики",
                "ordering": ("group__order", "group__title", "order", "title"),
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("main.characteristic",),
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[],
            options={
                "verbose_name": "категория",
                "verbose_name_plural": "категории",
                "ordering": (
                    "super_category__order",
                    "super_category__title",
                    "order",
                    "title",
                ),
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("main.category",),
        ),
        migrations.CreateModel(
            name="SuperCategory",
            fields=[],
            options={
                "verbose_name": "группа гатегорий",
                "verbose_name_plural": "группы категорий",
                "ordering": ("order", "title"),
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("main.category",),
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="main.subcategory",
                verbose_name="категория",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="characteristics",
            field=models.ManyToManyField(
                through="main.CharacteristicProductRelated",
                to="main.characteristicitem",
            ),
        ),
        migrations.AddField(
            model_name="characteristicproductrelated",
            name="characteristic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="main.characteristicitem",
                verbose_name="характеристика",
            ),
        ),
        migrations.AddField(
            model_name="characteristic",
            name="group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="main.characteristicgroup",
                verbose_name="группа характеристик",
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="super_category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="main.supercategory",
                verbose_name="надрубрика",
            ),
        ),
        migrations.AddConstraint(
            model_name="characteristicproductrelated",
            constraint=models.UniqueConstraint(
                models.F("product"),
                models.F("characteristic"),
                name="unique_product_characteristic",
            ),
        ),
        migrations.AddConstraint(
            model_name="characteristic",
            constraint=models.UniqueConstraint(
                models.OrderBy(
                    django.db.models.functions.text.Lower("title"), descending=True
                ),
                models.F("group"),
                name="unique_lower_name_category",
            ),
        ),
    ]
